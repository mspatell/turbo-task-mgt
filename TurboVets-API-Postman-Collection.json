{
  "info": {
    "name": "TurboVets API Collection",
    "description": "Complete API testing collection for TurboVets application",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3004/api",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "organizationId",
      "value": "123e4567-e89b-12d3-a456-426614174000",
      "type": "string"
    },
    {
      "key": "taskId",
      "value": "",
      "type": "string"
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{authToken}}",
        "type": "string"
      }
    ]
  },
  "item": [
    {
      "name": "üîê Authentication",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"newuser@example.com\",\n  \"password\": \"password123\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"organizationId\": \"{{organizationId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.status === 'Created' || pm.response.status === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.access_token) {",
                  "        pm.collectionVariables.set('authToken', response.access_token);",
                  "    }",
                  "    if (response.user && response.user.id) {",
                  "        pm.collectionVariables.set('userId', response.user.id);",
                  "    }",
                  "    if (response.user && response.user.organizationId) {",
                  "        pm.collectionVariables.set('organizationId', response.user.organizationId);",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Register Admin User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin2@example.com\",\n  \"password\": \"password123\",\n  \"firstName\": \"Jane\",\n  \"lastName\": \"Admin\",\n  \"organizationId\": \"{{organizationId}}\",\n  \"role\": \"admin\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.status === 'Created' || pm.response.status === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.access_token) {",
                  "        pm.collectionVariables.set('authToken', response.access_token);",
                  "    }",
                  "    if (response.user && response.user.id) {",
                  "        pm.collectionVariables.set('userId', response.user.id);",
                  "    }",
                  "    if (response.user && response.user.organizationId) {",
                  "        pm.collectionVariables.set('organizationId', response.user.organizationId);",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Register Viewer User (Default)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"viewer@example.com\",\n  \"password\": \"password123\",\n  \"firstName\": \"Bob\",\n  \"lastName\": \"Viewer\",\n  \"organizationId\": \"{{organizationId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.status === 'Created' || pm.response.status === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.access_token) {",
                  "        pm.collectionVariables.set('authToken', response.access_token);",
                  "    }",
                  "    if (response.user && response.user.id) {",
                  "        pm.collectionVariables.set('userId', response.user.id);",
                  "    }",
                  "    if (response.user && response.user.organizationId) {",
                  "        pm.collectionVariables.set('organizationId', response.user.organizationId);",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Login User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"owner@turbovets.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.status === 'OK' || pm.response.status === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.access_token) {",
                  "        pm.collectionVariables.set('authToken', response.access_token);",
                  "    }",
                  "    if (response.user && response.user.id) {",
                  "        pm.collectionVariables.set('userId', response.user.id);",
                  "    }",
                  "    if (response.user && response.user.organizationId) {",
                  "        pm.collectionVariables.set('organizationId', response.user.organizationId);",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Profile",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "profile"]
            }
          }
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "logout"]
            }
          }
        }
      ]
    },
    {
      "name": "ÔøΩ Users Management",
      "item": [
        {
          "name": "Get Current User Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "profile"]
            }
          }
        }
      ]
    },
    {
      "name": "ÔøΩüìã Tasks Management",
      "item": [
        {
          "name": "Create Task",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Sample Task\",\n  \"description\": \"This is a test task created from Postman\",\n  \"priority\": \"medium\",\n  \"dueDate\": \"2025-08-15T10:00:00.000Z\",\n  \"organizationId\": \"{{organizationId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/tasks",
              "host": ["{{baseUrl}}"],
              "path": ["tasks"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.status === 'Created' || pm.response.status === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.id) {",
                  "        pm.collectionVariables.set('taskId', response.id);",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get All Tasks",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/tasks",
              "host": ["{{baseUrl}}"],
              "path": ["tasks"]
            }
          }
        },
        {
          "name": "Get Tasks with Filters",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/tasks?status=pending&priority=high&page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["tasks"],
              "query": [
                {
                  "key": "status",
                  "value": "pending"
                },
                {
                  "key": "priority",
                  "value": "high"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Get Task by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/tasks/{{taskId}}",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", "{{taskId}}"]
            }
          }
        },
        {
          "name": "Update Task",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated Task Title\",\n  \"description\": \"Updated task description\",\n  \"status\": \"in_progress\",\n  \"priority\": \"high\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/tasks/{{taskId}}",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", "{{taskId}}"]
            }
          }
        },
        {
          "name": "Delete Task",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/tasks/{{taskId}}",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", "{{taskId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "üìä Audit Logs",
      "item": [
        {
          "name": "Get Audit Logs",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/audit-log",
              "host": ["{{baseUrl}}"],
              "path": ["audit-log"]
            }
          }
        },
        {
          "name": "Get Audit Logs with Filters",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/audit-log?resource=TASK&action=CREATE&page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["audit-log"],
              "query": [
                {
                  "key": "resource",
                  "value": "TASK"
                },
                {
                  "key": "action",
                  "value": "CREATE"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Get Audit Summary",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/audit-log/summary",
              "host": ["{{baseUrl}}"],
              "path": ["audit-log", "summary"]
            }
          }
        }
      ]
    },
    {
      "name": "üè• App Health Check",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}",
              "host": ["{{baseUrl}}"]
            }
          }
        }
      ]
    }
  ]
}
